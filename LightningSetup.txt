Setup the package:
1) Download the lightning.zip file into your ROS Workspace directory
2) Run "unzip lightning.zip" to get the ROS package
3) Run "rosmake lightning"

Run lightning tests:
*To run tests, make sure the ROBOT environment variable is set to "sim".
1) Specify the number of test iterations with the "num_test_iterations" argument and the arm to use ("right" or "left") with the "arm_to_use" argument in the *_test.launch file
2) Run "roslaunch lightning table_test.launch" or "roslaunch lightning box_test.launch"
    a) table_test: The scene is a tabletop with four boxes on it. The positions of the boxes are randomly chosen and a goal position is chosen around the top of the table.
    b) box_test: The scene is a tabletop with a large box on it. The box opening is facing towards the robot, and the goal position is chosen to be inside the box.
3) Lightning will store paths in the library for the given scene.

Run lightning:
1) To start lightning, run "roslaunch lightning lightning.launch". An environment server must be started for lightning to start.
2) To do planning, send a GetMotionPlanRequest to the "lightning_get_path" service. Lightning does not currently handle path constraints. It only plans for a start and a goal.

Path library management:
There are three management actions for the path library: storing a path, deleting a path, and deleting a library.
1) storing a path: Send the path as an array of JointTrajectoryPoints. Also, specify the robot name and the joint names, as those define which library to use. If the library for the given robot name and joint names does not exist, a new one will be created.
2) deleting a path: Send the path id of the path to delete. Again, specify the robot name and the joint names corresponding to the library that is to be changed.
3) deleting a library: Send the robot name and joint names corresponding to the library that is to be deleted.
